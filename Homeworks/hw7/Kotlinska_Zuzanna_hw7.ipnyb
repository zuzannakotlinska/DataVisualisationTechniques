{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib as mpl\n",
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from math import exp,sin,cos\n",
    "from pylab import *\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure()\n",
    "fig = plt.figure(figsize=(12,10))\n",
    "ax = fig.gca(projection='3d') \n",
    "ax._axis3don = False\n",
    "a=0.05\n",
    "b=0.10\n",
    "\n",
    "th=np.linspace(0, 50, 10000)  \n",
    "x=a*exp(b*th)*cos(th)\n",
    "y=a*exp(b*th)*sin(th)\n",
    "z=np.linspace(0,2, 10000)\n",
    "ax.plot(x, y, z, color = 'green')\n",
    "ax.scatter(0, 0, 0, marker = \"*\", color = \"#d1ad0f\", s = 1000)\n",
    "ax.scatter([0.25, 0.75, 1, 1.25, 0.25, 1.5, 0.25, 1, 0.25, 1.5, 0.25, 0.5, 1.5, 0.25], [0, 0.15, -0.15, 0.15, -0.2, 1.4, -1.8, 0, 2.45, -0.15, -3.4, 4.8, 1, -1], [0.25, 0.5, 0.75, 1, 1.25, 1.32, 1.44, 1.5, 1.56, 1.67, 1.7, 1.82, 1.92, 1.93] , color = 'red')\n",
    "for angle in range(0, 360):\n",
    "    ax.view_init(180, angle)\n",
    "    plt.draw()\n",
    "ax.set_title(\"Wesołych Świąt!\", fontname=\"Courier New\", fontsize = 25, color = \"#d1ad0f\", x = 0.55)\n",
    "\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
